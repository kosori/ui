{
  "name": "progress",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-progress"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Indicator, Root } from '@radix-ui/react-progress';\\nimport { tv } from 'tailwind-variants';\\n\\nconst progressStyles = tv({\\n  slots: {\\n    base: 'relative h-2 w-full overflow-hidden rounded-full bg-grey-bg',\\n    indicator: 'size-full flex-1 bg-grey-text-contrast transition-all',\\n  },\\n});\\n\\nconst { base, indicator } = progressStyles();\\n\\ntype ProgressRef = React.ElementRef<typeof Root>;\\ntype ProgressProps = React.ComponentPropsWithoutRef<typeof Root>;\\n\\n/**\\n * Progress component that displays the progress of a task.\\n *\\n * @param {ProgressProps} props - The props for the Progress component.\\n * @param {number} [value] - The current progress value (between 0 and 100).\\n *\\n * @example\\n * ```tsx\\n * <Progress value={33} />\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-progress Progress Docs} for further information.\\n */\\nexport const Progress = forwardRef<ProgressRef, ProgressProps>(\\n  ({ className, value, ...props }, ref) => (\\n    <Root ref={ref} className={base({ className })} {...props}>\\n      <Indicator\\n        className={indicator()}\\n        style={{ transform: `translateX(-${100 - (value ?? 0)}%)` }}\\n      />\\n    </Root>\\n  ),\\n);\\n\\nProgress.displayName = Root.displayName;\\n"
}
