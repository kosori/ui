{
  "name": "scroll-area",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-scroll-area"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport {\\n  Corner,\\n  Root,\\n  ScrollAreaThumb,\\n  ScrollAreaScrollbar as Scrollbar,\\n  Viewport,\\n} from '@radix-ui/react-scroll-area';\\nimport { tv } from 'tailwind-variants';\\n\\nconst scrollAreaStyles = tv({\\n  slots: {\\n    base: 'relative overflow-hidden',\\n    viewport: 'size-full rounded-[inherit]',\\n    scrollbar: 'flex touch-none select-none transition-colors',\\n    thumb: 'relative flex-1 rounded-full bg-grey-line',\\n  },\\n  variants: {\\n    orientation: {\\n      vertical: {\\n        scrollbar: 'h-full w-2.5 border-l border-l-transparent p-px',\\n      },\\n      horizontal: {\\n        scrollbar: 'h-2.5 w-full border-t border-t-transparent p-px',\\n      },\\n    },\\n  },\\n});\\n\\nconst { base, viewport, scrollbar, thumb } = scrollAreaStyles();\\n\\ntype ScrollAreaRef = React.ElementRef<typeof Root>;\\ntype ScrollAreaProps = React.ComponentPropsWithoutRef<typeof Root>;\\n\\n/**\\n * ScrollArea component that provides a scrollable area for content.\\n *\\n * @param {ScrollAreaProps} props - The props for the ScrollArea component.\\n *\\n * @example\\n * ```tsx\\n * <ScrollArea className='h-[200px] w-[350px] rounded-md border p-4'>\\n *   Jokester began sneaking into the castle in the middle of the night and leaving\\n *   jokes all over the place: under the king's pillow, in his soup, even in the\\n *   royal toilet. The king was furious, but he couldn't seem to stop Jokester. And\\n *   then, one day, the people of the kingdom discovered that the jokes left by\\n *   Jokester were so funny that they couldn't help but laugh. And once they\\n *   started laughing, they couldn't stop.\\n * </ScrollArea>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-scroll-area ScrollArea Docs} for further information.\\n */\\n/**\\n * ScrollAreaScrollbar component that represents the scrollbar within the scroll area.\\n *\\n * @param {ScrollAreaScrollbarProps} props - The props for the ScrollAreaScrollbar component.\\n *\\n * @example\\n * ```tsx\\n * <ScrollAreaScrollbar orientation='vertical' />\\n * ```\\n */\\nexport const ScrollArea = forwardRef<ScrollAreaRef, ScrollAreaProps>(\\n  ({ className, children, ...props }, ref) => (\\n    <Root ref={ref} className={base({ className })} {...props}>\\n      <Viewport className={viewport()}>{children}</Viewport>\\n      <ScrollAreaScrollbar />\\n      <Corner />\\n    </Root>\\n  ),\\n);\\n\\nScrollArea.displayName = Root.displayName;\\n\\ntype ScrollAreaScrollbarRef = React.ElementRef<typeof Scrollbar>;\\ntype ScrollAreaScrollbarProps = React.ComponentPropsWithoutRef<\\n  typeof Scrollbar\\n>;\\n\\n/**\\n * ScrollAreaScrollbar component that represents the scrollbar within the scroll area.\\n *\\n * @param {ScrollAreaScrollbarProps} props - The props for the ScrollAreaScrollbar component.\\n *\\n * @example\\n * ```tsx\\n * <ScrollAreaScrollbar orientation='vertical' />\\n * ```\\n */\\nexport const ScrollAreaScrollbar = forwardRef<\\n  ScrollAreaScrollbarRef,\\n  ScrollAreaScrollbarProps\\n>(({ className, orientation = 'vertical', ...props }, ref) => (\\n  <Scrollbar\\n    ref={ref}\\n    className={scrollbar({ className, orientation })}\\n    orientation={orientation}\\n    {...props}\\n  >\\n    <ScrollAreaThumb className={thumb()} />\\n  </Scrollbar>\\n));\\n\\nScrollAreaScrollbar.displayName = Scrollbar.displayName;\\n"
}
