{
  "name": "popover",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-popover"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Content, Portal, Root, Trigger } from '@radix-ui/react-popover';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst popoverStyles = tv({\\n  slots: {\\n    content: clsx(\\n      'z-50 w-72 rounded-lg border border-grey-line bg-grey-base p-4 shadow-md outline-none',\\n      'data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95',\\n      'data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95',\\n      'data-[side=bottom]:slide-in-from-top-2',\\n      'data-[side=left]:slide-in-from-right-2',\\n      'data-[side=right]:slide-in-from-left-2',\\n      'data-[side=top]:slide-in-from-bottom-2',\\n    ),\\n  },\\n});\\n\\nconst { content } = popoverStyles();\\n\\n/**\\n * Popover component that serves as a container for popover content.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Root>} props - The props for the Popover component.\\n *\\n * @example\\n * <Popover>\\n *   <PopoverTrigger>Open</PopoverTrigger>\\n *   <PopoverContent>Place content for the popover here.</PopoverContent>\\n * </Popover>\\n *\\n * @see {@link https://dub.sh/ui-popover Popover Docs} for further information.\\n */\\nexport const Popover = Root;\\n\\n/**\\n * PopoverTrigger component that triggers the display of the popover content.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Trigger>} props - The props for the PopoverTrigger component.\\n *\\n * @example\\n * <PopoverTrigger>Open</PopoverTrigger>\\n */\\nexport const PopoverTrigger = Trigger;\\n\\ntype PopoverContentRef = React.ElementRef<typeof Content>;\\ntype PopoverContentProps = React.ComponentPropsWithoutRef<typeof Content>;\\n\\n/**\\n * PopoverContent component that displays the content of the popover.\\n *\\n * @param {PopoverContentProps} props - The props for the PopoverContent component.\\n *\\n * @example\\n * <PopoverContent>Place content for the popover here.</PopoverContent>\\n */\\nexport const PopoverContent = forwardRef<\\n  PopoverContentRef,\\n  PopoverContentProps\\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\\n  <Portal>\\n    <Content\\n      ref={ref}\\n      align={align}\\n      className={content({ className })}\\n      sideOffset={sideOffset}\\n      {...props}\\n    />\\n  </Portal>\\n));\\n\\nPopoverContent.displayName = Content.displayName;\\n"
}
