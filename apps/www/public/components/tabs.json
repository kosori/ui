{
  "name": "tabs",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-tabs"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Content, List, Root, Trigger } from '@radix-ui/react-tabs';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst tabsStyles = tv({\\n  slots: {\\n    list: 'inline-flex h-9 items-center justify-center rounded-lg bg-grey-bg p-1 text-grey-text',\\n    trigger: clsx(\\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium outline-none transition-all',\\n      'focus-visible:ring-4 focus-visible:ring-primary-focus-ring',\\n      'disabled:cursor-not-allowed disabled:text-grey-solid',\\n      'data-[state=active]:bg-grey-base data-[state=active]:text-grey-text-contrast data-[state=active]:shadow-sm',\\n    ),\\n    content: clsx(\\n      'mt-2 outline-none',\\n      'focus-visible:ring-4 focus-visible:ring-primary-focus-ring',\\n    ),\\n  },\\n});\\n\\nconst { list, trigger, content } = tabsStyles();\\n\\n/**\\n * Tabs component that serves as a container for tabbed navigation.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Root>} props - The props for the Tabs component.\\n *\\n * @example\\n * <Tabs defaultValue='account' className='w-[400px]'>\\n *   <TabsList>\\n *     <TabsTrigger value='account'>Account</TabsTrigger>\\n *     <TabsTrigger value='password'>Password</TabsTrigger>\\n *   </TabsList>\\n *   <TabsContent value='account'>Make changes to your account here.</TabsContent>\\n *   <TabsContent value='password'>Change your password here.</TabsContent>\\n * </Tabs>\\n *\\n * @see {@link https://dub.sh/ui-tabs Tabs Docs} for further information.\\n */\\nexport const Tabs = Root;\\n\\ntype TabsListRef = React.ElementRef<typeof List>;\\ntype TabsListProps = React.ComponentPropsWithoutRef<typeof List>;\\n\\n/**\\n * TabsList component that represents the list of tab triggers.\\n *\\n * @param {TabsListProps} props - The props for the TabsList component.\\n *\\n * @example\\n * <TabsList>\\n *   <TabsTrigger value='account'>Account</TabsTrigger>\\n * </TabsList>\\n */\\nexport const TabsList = forwardRef<TabsListRef, TabsListProps>(\\n  ({ className, ...props }, ref) => (\\n    <List ref={ref} className={list({ className })} {...props} />\\n  ),\\n);\\n\\nTabsList.displayName = List.displayName;\\n\\ntype TabsTriggerRef = React.ElementRef<typeof Trigger>;\\ntype TabsTriggerProps = React.ComponentPropsWithoutRef<typeof Trigger>;\\n\\n/**\\n * TabsTrigger component that represents an individual tab trigger.\\n *\\n * @param {TabsTriggerProps} props - The props for the TabsTrigger component.\\n *\\n * @example\\n * <TabsTrigger value='account'>Account</TabsTrigger>\\n */\\nexport const TabsTrigger = forwardRef<TabsTriggerRef, TabsTriggerProps>(\\n  ({ className, ...props }, ref) => (\\n    <Trigger ref={ref} className={trigger({ className })} {...props} />\\n  ),\\n);\\n\\nTabsTrigger.displayName = Trigger.displayName;\\n\\ntype TabsContentRef = React.ElementRef<typeof Content>;\\ntype TabsContentProps = React.ComponentPropsWithoutRef<typeof Content>;\\n\\n/**\\n * TabsContent component that displays the content associated with a tab.\\n *\\n * @param {TabsContentProps} props - The props for the TabsContent component.\\n *\\n * @example\\n * <TabsContent value='account'>Account details go here.</TabsContent>\\n */\\nexport const TabsContent = forwardRef<TabsContentRef, TabsContentProps>(\\n  ({ className, ...props }, ref) => (\\n    <Content ref={ref} className={content({ className })} {...props} />\\n  ),\\n);\\n\\nTabsContent.displayName = Content.displayName;\\n"
}
