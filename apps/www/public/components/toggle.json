{
  "name": "toggle",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-toggle"],
  "content": "import type { VariantProps } from 'tailwind-variants';\\nimport { forwardRef } from 'react';\\nimport { Root } from '@radix-ui/react-toggle';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nexport const toggleStyles = tv({\\n  base: clsx(\\n    'inline-flex items-center justify-center gap-2 rounded-lg text-sm font-medium outline-none transition-colors duration-200',\\n    'focus-visible:ring-4',\\n    'disabled:cursor-not-allowed',\\n  ),\\n  variants: {\\n    variant: {\\n      ghost: clsx(\\n        'hover:bg-grey-bg-hover',\\n        'active:bg-grey-bg-active',\\n        'data-[state=on]:bg-grey-bg-active',\\n        'focus-visible:ring-grey-focus-ring',\\n        'disabled:text-grey-solid',\\n        'disabled:hover:bg-transparent',\\n      ),\\n      outline: clsx(\\n        'border border-grey-border',\\n        'hover:border-grey-border-hover hover:bg-grey-bg-hover',\\n        'hover:border-grey-border-hover active:bg-grey-bg-active',\\n        'data-[state=on]:border-grey-border-hover data-[state=on]:bg-grey-bg-active',\\n        'focus-visible:ring-grey-focus-ring',\\n        'disabled:border-grey-line disabled:bg-grey-bg disabled:text-grey-solid',\\n      ),\\n    },\\n    size: {\\n      small: 'h-8 px-2',\\n      medium: 'h-9 px-3',\\n      large: 'h-10 px-3',\\n    },\\n  },\\n  defaultVariants: {\\n    variant: 'ghost',\\n    size: 'medium',\\n  },\\n});\\n\\ntype ToggleRef = React.ElementRef<typeof Root>;\\ntype ToggleRadixProps = React.ComponentPropsWithoutRef<typeof Root>;\\nexport type ToggleVariants = VariantProps<typeof toggleStyles>;\\ntype ToggleProps = object & ToggleRadixProps & ToggleVariants;\\n\\n/**\\n * Toggle component that allows users to switch between on and off states.\\n *\\n * @param {ToggleProps} props - The props for the Toggle component.\\n * @param {'ghost' | 'outline'} [variant='ghost'] - The variant style of the toggle (e.g. 'ghost', 'outline').\\n * @param {'small' | 'medium' | 'large'} [size='medium'] - The size of the toggle (e.g. 'small', 'medium', 'large').\\n *\\n * @example\\n * <Toggle>Toggle</Toggle>\\n *\\n * @see {@link https://dub.sh/ui-toggle Toggle Docs} for further information.\\n */\\nexport const Toggle = forwardRef<ToggleRef, ToggleProps>(\\n  ({ className, variant, size, ...props }, ref) => (\\n    <Root\\n      ref={ref}\\n      className={toggleStyles({ className, size, variant })}\\n      {...props}\\n    />\\n  ),\\n);\\n\\nToggle.displayName = Root.displayName;\\n"
}
