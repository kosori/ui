{
  "name": "toggle",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-toggle"],
  "content": "import type { VariantProps } from 'tailwind-variants';\\nimport { forwardRef } from 'react';\\nimport { Root } from '@radix-ui/react-toggle';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nexport const toggleStyles = tv({\\n  base: clsx(\\n    'inline-flex items-center justify-center font-medium outline-none transition-colors duration-200',\\n    'focus-visible:ring-4',\\n    'disabled:cursor-not-allowed',\\n  ),\\n  variants: {\\n    variant: {\\n      ghost: clsx(\\n        'hover:bg-grey-bg-hover',\\n        'active:bg-grey-bg-active',\\n        'data-[state=on]:bg-grey-bg-active',\\n        'focus-visible:ring-grey-focus-ring',\\n        'disabled:text-grey-solid',\\n        'disabled:hover:bg-transparent',\\n      ),\\n      outline: clsx(\\n        'border border-grey-border',\\n        'hover:border-grey-border-hover hover:bg-grey-bg-hover',\\n        'active:bg-grey-bg-active',\\n        'data-[state=on]:border-grey-border-hover data-[state=on]:bg-grey-bg-active',\\n        'focus-visible:ring-grey-focus-ring',\\n        'disabled:border-grey-line disabled:bg-grey-bg disabled:text-grey-solid',\\n      ),\\n    },\\n    size: {\\n      small: clsx('h-8 gap-x-1.5 rounded-lg px-2 text-xs', '[&_svg]:size-3.5'),\\n      medium: clsx('h-9 gap-x-2 rounded-lg px-3 text-sm', '[&_svg]:size-4'),\\n      large: clsx('text-md h-10 gap-x-2.5 rounded-xl px-3', '[_&svg]:size-5'),\\n    },\\n    icon: {\\n      true: '',\\n    },\\n  },\\n  compoundVariants: [\\n    {\\n      size: 'small',\\n      icon: true,\\n      class: 'w-8 px-0',\\n    },\\n    {\\n      size: 'medium',\\n      icon: true,\\n      class: 'w-9 px-0',\\n    },\\n    {\\n      size: 'large',\\n      icon: true,\\n      class: 'w-10 px-0',\\n    },\\n  ],\\n  defaultVariants: {\\n    variant: 'ghost',\\n    size: 'medium',\\n  },\\n});\\n\\ntype ToggleRef = React.ElementRef<typeof Root>;\\ntype ToggleRadixProps = React.ComponentPropsWithoutRef<typeof Root>;\\nexport type ToggleVariants = VariantProps<typeof toggleStyles>;\\ntype ToggleProps = object & ToggleRadixProps & ToggleVariants;\\n\\n/**\\n * Toggle component that allows users to switch between on and off states.\\n *\\n * @param {ToggleProps} props - The props for the Toggle component.\\n * @param {'ghost' | 'outline'} [variant='ghost'] - The variant style of the toggle (e.g. 'ghost', 'outline').\\n * @param {'small' | 'medium' | 'large'} [size='medium'] - The size of the toggle (e.g. 'small', 'medium', 'large').\\n * @param {boolean} [icon=false] - If true, adjusts the button size for icon-only usage.\\n *\\n * @example\\n * ```tsx\\n * <Toggle>Toggle</Toggle>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-toggle Toggle Docs} for further information.\\n */\\nexport const Toggle = forwardRef<ToggleRef, ToggleProps>(\\n  ({ className, variant, size, icon, ...props }, ref) => (\\n    <Root\\n      ref={ref}\\n      className={toggleStyles({ className, size, variant, icon })}\\n      {...props}\\n    />\\n  ),\\n);\\n\\nToggle.displayName = Root.displayName;\\n"
}
