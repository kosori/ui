{
  "name": "slider",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-slider"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Range, Root, Thumb, Track } from '@radix-ui/react-slider';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst sliderStyles = tv({\\n  slots: {\\n    base: 'group relative flex w-full touch-none select-none items-center',\\n    track: clsx(\\n      'relative h-1.5 w-full grow cursor-pointer overflow-hidden rounded-full bg-grey-bg',\\n      'group-data-[disabled]:cursor-not-allowed',\\n    ),\\n    range: clsx(\\n      'absolute h-full bg-grey-text-contrast',\\n      'group-data-[disabled]:cursor-not-allowed',\\n    ),\\n    thumb: clsx(\\n      'block size-4 cursor-pointer rounded-full border-2 border-grey-text-contrast bg-grey-bg shadow outline-none transition-colors',\\n      'hover:bg-grey-bg-hover',\\n      'active:bg-grey-bg-active',\\n      'focus-visible:ring-4 focus-visible:ring-grey-focus-ring',\\n      'grou-data-[disabled]:border-grey-line grou-data-[disabled]:cursor-not-allowed disabled:bg-grey-bg-subtle group-data-[disabled]:cursor-not-allowed',\\n    ),\\n  },\\n});\\n\\nconst { base, track, range, thumb } = sliderStyles();\\n\\ntype SliderRef = React.ElementRef<typeof Root>;\\ntype SliderProps = React.ComponentPropsWithoutRef<typeof Root>;\\n\\n/**\\n * Slider component that allows users to select a value from a range.\\n *\\n * @param {SliderProps} props - The props for the Slider component.\\n *\\n * @example\\n * ```tsx\\n * <Slider defaultValue={[33]} max={100} step={1} />\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-slider Slider Docs} for further information.\\n */\\nexport const Slider = forwardRef<SliderRef, SliderProps>(\\n  ({ className, ...props }, ref) => (\\n    <Root ref={ref} className={base({ className })} {...props}>\\n      <Track className={track()}>\\n        <Range className={range()} />\\n      </Track>\\n\\n      <Thumb className={thumb()} />\\n    </Root>\\n  ),\\n);\\n\\nSlider.displayName = Root.displayName;\\n"
}
