{
  "name": "input",
  "type": "component:ui",
  "content": "import type { VariantProps } from 'tailwind-variants';\\nimport { forwardRef } from 'react';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst inputStyles = tv({\\n  base: clsx(\\n    'flex h-9 w-full justify-center rounded-lg border border-grey-border bg-grey-base px-3 py-1 text-sm outline-none transition-colors duration-200',\\n    'placeholder:text-grey-placeholder-text',\\n    'hover:border-grey-border-hover',\\n    'focus:ring-4 focus:ring-grey-focus-ring',\\n    'disabled:cursor-not-allowed disabled:border-grey-line disabled:bg-grey-bg disabled:text-grey-solid',\\n    'aria-[invalid=true]:border-error-border',\\n    'aria-[invalid=true]:hover:border-error-border-hover',\\n    'aria-[invalid=true]:focus:ring-error-focus-ring',\\n    'file:cursor-pointer file:border-0 file:bg-transparent file:pt-[0.25rem] file:font-medium file:text-grey-text-contrast',\\n    'file:disabled:cursor-not-allowed file:disabled:text-grey-solid',\\n  ),\\n});\\n\\ntype HTMLInputProps = React.InputHTMLAttributes<HTMLInputElement>;\\ntype InputVariants = VariantProps<typeof inputStyles>;\\ntype InputProps = HTMLInputProps & InputVariants;\\n\\n/**\\n * Input component that renders a styled input field.\\n *\\n * @param {InputProps} props - The props for the Input component.\\n *\\n * @example\\n * <Input />\\n *\\n * @see {@link https://dub.sh/ui-input Input Docs} for further information.\\n */\\n\\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\\n  ({ className, type, ...props }, ref) => (\\n    <input\\n      ref={ref}\\n      className={inputStyles({ class: className })}\\n      type={type}\\n      {...props}\\n    />\\n  ),\\n);\\n\\nInput.displayName = 'Input';\\n"
}
