{
  "name": "card",
  "type": "component:ui",
  "content": "import { forwardRef } from 'react';\\nimport { tv } from 'tailwind-variants';\\n\\nconst cardStyles = tv({\\n  slots: {\\n    base: 'rounded-xl border border-grey-line bg-grey-base text-grey-text-contrast shadow-sm',\\n    header: 'flex flex-col gap-y-1.5 p-6',\\n    title: 'font-semibold leading-none tracking-tight',\\n    description: 'text-sm text-grey-text',\\n    content: 'p-6 pt-0',\\n    footer: 'flex items-center p-6 pt-0',\\n  },\\n});\\n\\nconst { base, header, title, description, content, footer } = cardStyles();\\n\\ntype CardProps = React.HTMLAttributes<HTMLDivElement>;\\n\\n/**\\n * Card component that serves as a container for content, typically used to display related information.\\n *\\n * @param {CardProps} props - The props for the Card component.\\n *\\n * @example\\n * ```tsx\\n * <Card>\\n *   <CardHeader>\\n *     <CardTitle>Card Title</CardTitle>\\n *     <CardDescription>Card Description</CardDescription>\\n *   </CardHeader>\\n *   <CardContent>\\n *     <p>Card Content</p>\\n *   </CardContent>\\n *   <CardFooter>\\n *     <p>Card Footer</p>\\n *   </CardFooter>\\n * </Card>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-card Card Docs} for further information.\\n */\\nexport const Card = forwardRef<HTMLDivElement, CardProps>(\\n  ({ className, ...props }, ref) => (\\n    <div ref={ref} className={base({ className })} {...props} />\\n  ),\\n);\\n\\nCard.displayName = 'Card';\\n\\ntype CardHeaderProps = React.HTMLAttributes<HTMLDivElement>;\\n\\n/**\\n * CardHeader component that serves as the header section of the Card.\\n *\\n * @param {CardHeaderProps} props - Additional props to pass to the CardHeader component.\\n *\\n * @example\\n * ```tsx\\n * <CardHeader>\\n *   <CardTitle>Card Title</CardTitle>\\n *   <CardDescription>Card Description</CardDescription>\\n * </CardHeader>\\n * ```\\n */\\nexport const CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\\n  ({ className, ...props }, ref) => (\\n    <div ref={ref} className={header({ className })} {...props} />\\n  ),\\n);\\n\\nCardHeader.displayName = 'CardHeader';\\n\\ntype CardTitleProps = React.HTMLAttributes<HTMLHeadingElement>;\\n\\n/**\\n * CardTitle component that displays the title of the Card.\\n *\\n * @param {CardTitleProps} props - Additional props to pass to the CardTitle component.\\n *\\n * @example\\n * ```tsx\\n * <CardTitle>Card Title</CardTitle>\\n * ```\\n */\\nexport const CardTitle = forwardRef<HTMLParagraphElement, CardTitleProps>(\\n  ({ className, ...props }, ref) => (\\n    <h3 ref={ref} className={title({ className })} {...props} />\\n  ),\\n);\\n\\nCardTitle.displayName = 'CardTitle';\\n\\ntype CardDescriptionProps = React.HTMLAttributes<HTMLParagraphElement>;\\n\\n/**\\n * CardDescription component that provides a brief description of the Card's content.\\n *\\n * @param {CardDescriptionProps} props - Additional props to pass to the CardDescription component.\\n *\\n * @example\\n * ```tsx\\n * <CardDescription>Card Description</CardDescription>\\n * ```\\n */\\nexport const CardDescription = forwardRef<\\n  HTMLParagraphElement,\\n  CardDescriptionProps\\n>(({ className, ...props }, ref) => (\\n  <p ref={ref} className={description({ className })} {...props} />\\n));\\n\\nCardDescription.displayName = 'CardDescription';\\n\\ntype CardContentProps = React.HTMLAttributes<HTMLDivElement>;\\n\\n/**\\n * CardContent component that serves as the main content area of the Card.\\n *\\n * @param {CardContentProps} props - Additional props to pass to the CardContent component.\\n *\\n * @example\\n * ```tsx\\n * <CardContent>\\n *   <p>Card Content</p>\\n * </CardContent>\\n * ```\\n */\\nexport const CardContent = forwardRef<HTMLDivElement, CardContentProps>(\\n  ({ className, ...props }, ref) => (\\n    <div ref={ref} className={content({ className })} {...props} />\\n  ),\\n);\\n\\nCardContent.displayName = 'CardContent';\\n\\ntype CardFooterProps = React.HTMLAttributes<HTMLDivElement>;\\n\\n/**\\n * CardFooter component that serves as the footer section of the Card.\\n *\\n * @param {CardFooterProps} props - Additional props to pass to the CardFooter component.\\n *\\n * @example\\n * ```tsx\\n * <CardFooter>\\n *   <p>Card Footer</p>\\n * </CardFooter>\\n * ```\\n */\\nexport const CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\\n  ({ className, ...props }, ref) => (\\n    <div ref={ref} className={footer({ className })} {...props} />\\n  ),\\n);\\n\\nCardFooter.displayName = 'CardFooter';\\n"
}
