{
  "name": "checkbox",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-checkbox"],
  "content": "'use client';\\n\\nimport type { VariantProps } from 'tailwind-variants';\\nimport { forwardRef } from 'react';\\nimport { Indicator, Root } from '@radix-ui/react-checkbox';\\nimport { CheckIcon } from '@radix-ui/react-icons';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst checkboxStyles = tv({\\n  slots: {\\n    base: clsx(\\n      'group peer border border-grey-border bg-grey-base outline-none transition-colors duration-200 flex',\\n      'hover:border-grey-border-hover',\\n      'focus-visible:ring-4 focus-visible:ring-grey-focus-ring',\\n      'disabled:cursor-not-allowed disabled:border-0 disabled:bg-grey-line',\\n      'data-[state=checked]:border-0 data-[state=checked]:bg-primary-solid',\\n      'data-[state=checked]:focus-visible:ring-primary-focus-ring',\\n      'data-[state=checked]:disabled:border-0 data-[state=checked]:disabled:bg-grey-line',\\n    ),\\n    indicator: 'flex items-center justify-center',\\n    check: 'h-full w-full text-grey-base group-disabled:text-grey-solid',\\n  },\\n  variants: {\\n    shape: {\\n      square: { base: 'rounded-md' },\\n      round: { base: 'rounded-full' },\\n    },\\n    size: {\\n      small: { base: 'size-4 p-0.5' },\\n      medium: { base: 'size-[18px] p-0.5' },\\n    },\\n  },\\n  defaultVariants: {\\n    shape: 'square',\\n    size: 'small',\\n  },\\n});\\n\\nconst { base, indicator, check } = checkboxStyles();\\n\\ntype CheckboxRef = React.ElementRef<typeof Root>;\\ntype CheckboxRadixProps = React.ComponentPropsWithoutRef<typeof Root>;\\ntype CheckboxVariants = VariantProps<typeof checkboxStyles>;\\ntype CheckboxProps = object & CheckboxRadixProps & CheckboxVariants;\\n\\n/**\\n * Checkbox component that allows users to select or deselect an option.\\n *\\n * @param {CheckboxProps} props - The props for the Checkbox component.\\n * @param {'square' | 'round'} [shape='square'] - The shape of the checkbox.\\n * @param {'small' | 'medium'} [size='small'] - The size of the checkbox.\\n *\\n * @example\\n * <Checkbox />\\n *\\n * @see {@link https://dub.sh/ui-checkbox Checkbox Docs} for further information.\\n */\\nexport const Checkbox = forwardRef<CheckboxRef, CheckboxProps>(\\n  ({ shape, size, className, ...props }, ref) => (\\n    <Root ref={ref} className={base({ className, shape, size })} {...props}>\\n      <Indicator className={indicator()}>\\n        <CheckIcon className={check()} />\\n      </Indicator>\\n    </Root>\\n  ),\\n);\\n\\nCheckbox.displayName = Root.displayName;\\n"
}
