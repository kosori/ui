{
  "name": "button",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-slot"],
  "content": "import type { VariantProps } from 'tailwind-variants';\\nimport { forwardRef } from 'react';\\nimport { Slot } from '@radix-ui/react-slot';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nexport const buttonStyles = tv({\\n  base: clsx(\\n    'flex size-fit items-center justify-center font-semibold outline-none transition-colors duration-200',\\n    'focus-visible:ring-4',\\n    'disabled:cursor-not-allowed',\\n  ),\\n  variants: {\\n    variant: {\\n      solid: '',\\n      soft: '',\\n      outline: '',\\n      ghost: '',\\n    },\\n    intent: {\\n      default: '',\\n      info: '',\\n      success: '',\\n      warning: '',\\n      error: '',\\n    },\\n    size: {\\n      small: clsx(\\n        'h-8 gap-x-1.5 rounded-lg px-2.5 text-xs leading-4',\\n        '[&_svg]:size-3.5',\\n      ),\\n      medium: clsx('h-9 gap-x-2 rounded-lg px-3 text-sm', '[&_svg]:size-4'),\\n      large: clsx('text-md h-10 gap-x-2.5 rounded-xl px-4', '[&_svg]:size-5'),\\n    },\\n    icon: {\\n      true: '',\\n    },\\n  },\\n  compoundVariants: [\\n    {\\n      variant: 'solid',\\n      intent: 'default',\\n      class: clsx(\\n        'bg-primary-solid text-primary-base',\\n        'hover:bg-primary-solid-hover',\\n        'focus-visible:ring-primary-focus-ring',\\n        'disabled:bg-primary-border',\\n      ),\\n    },\\n    {\\n      variant: 'soft',\\n      intent: 'default',\\n      class: clsx(\\n        'bg-primary-bg text-primary-solid',\\n        'hover:bg-primary-bg-hover',\\n        'active:bg-primary-bg-active',\\n        'focus-visible:ring-primary-focus-ring',\\n        'disabled:bg-primary-bg-subtle disabled:text-primary-line',\\n      ),\\n    },\\n    {\\n      variant: 'outline',\\n      intent: 'default',\\n      class: clsx(\\n        'border border-primary-border bg-primary-base text-primary-solid',\\n        'hover:border-primary-border-hover hover:bg-primary-bg-subtle',\\n        'active:bg-primary-bg',\\n        'focus-visible:ring-primary-focus-ring',\\n        'disabled:border-primary-line disabled:bg-primary-base disabled:text-primary-line',\\n      ),\\n    },\\n    {\\n      variant: 'ghost',\\n      intent: 'default',\\n      class: clsx(\\n        'text-primary-text-contrast',\\n        'hover:bg-primary-bg-hover',\\n        'active:bg-primary-bg-active',\\n        'focus-visible:ring-primary-focus-ring',\\n        'disabled:bg-transparent disabled:text-primary-solid',\\n      ),\\n    },\\n\\n    {\\n      variant: 'solid',\\n      intent: 'info',\\n      class: clsx(\\n        'bg-info-solid text-white',\\n        'hover:bg-info-solid-hover',\\n        'focus-visible:ring-info-focus-ring',\\n        'disabled:bg-info-border',\\n      ),\\n    },\\n    {\\n      variant: 'soft',\\n      intent: 'info',\\n      class: clsx(\\n        'bg-info-bg text-info-solid',\\n        'hover:bg-info-bg-hover',\\n        'active:bg-info-bg-active',\\n        'focus-visible:ring-info-focus-ring',\\n        'disabled:bg-info-bg-subtle disabled:text-info-line',\\n      ),\\n    },\\n    {\\n      variant: 'outline',\\n      intent: 'info',\\n      class: clsx(\\n        'border border-info-border bg-info-base text-info-solid',\\n        'hover:border-info-border-hover hover:bg-info-bg-subtle',\\n        'active:bg-info-bg',\\n        'focus-visible:ring-info-focus-ring',\\n        'disabled:border-info-line disabled:bg-info-base disabled:text-info-line',\\n      ),\\n    },\\n    {\\n      variant: 'ghost',\\n      intent: 'info',\\n      class: clsx(\\n        'text-info-solid',\\n        'hover:bg-info-bg',\\n        'active:bg-info-bg-hover',\\n        'focus-visible:ring-info-focus-ring',\\n        'disabled:bg-transparent disabled:text-info-line',\\n      ),\\n    },\\n\\n    {\\n      variant: 'solid',\\n      intent: 'success',\\n      class: clsx(\\n        'bg-success-solid text-white',\\n        'hover:bg-success-solid-hover',\\n        'focus-visible:ring-success-focus-ring',\\n        'disabled:bg-success-border',\\n      ),\\n    },\\n    {\\n      variant: 'soft',\\n      intent: 'success',\\n      class: clsx(\\n        'bg-success-bg text-success-solid',\\n        'hover:bg-success-bg-hover',\\n        'active:bg-success-bg-active',\\n        'focus-visible:ring-success-focus-ring',\\n        'disabled:bg-success-bg-subtle disabled:text-success-line',\\n      ),\\n    },\\n    {\\n      variant: 'outline',\\n      intent: 'success',\\n      class: clsx(\\n        'border border-success-border bg-success-base text-success-solid',\\n        'hover:border-success-border-hover hover:bg-success-bg-subtle',\\n        'active:bg-success-bg',\\n        'focus-visible:ring-success-focus-ring',\\n        'disabled:border-success-line disabled:bg-success-base disabled:text-success-line',\\n      ),\\n    },\\n    {\\n      variant: 'ghost',\\n      intent: 'success',\\n      class: clsx(\\n        'text-success-solid',\\n        'hover:bg-success-bg',\\n        'active:bg-success-bg-hover',\\n        'focus-visible:ring-success-focus-ring',\\n        'disabled:bg-transparent disabled:text-success-line',\\n      ),\\n    },\\n\\n    {\\n      variant: 'solid',\\n      intent: 'warning',\\n      class: clsx(\\n        'bg-warning-solid text-white',\\n        'hover:bg-warning-solid-hover',\\n        'focus-visible:ring-warning-focus-ring',\\n        'disabled:bg-warning-border',\\n      ),\\n    },\\n    {\\n      variant: 'soft',\\n      intent: 'warning',\\n      class: clsx(\\n        'bg-warning-bg text-warning-solid',\\n        'hover:bg-warning-bg-hover',\\n        'active:bg-warning-bg-active',\\n        'focus-visible:ring-warning-focus-ring',\\n        'disabled:bg-warning-bg-subtle disabled:text-warning-line',\\n      ),\\n    },\\n    {\\n      variant: 'outline',\\n      intent: 'warning',\\n      class: clsx(\\n        'border border-warning-border bg-warning-base text-warning-solid',\\n        'hover:border-warning-border-hover hover:bg-warning-bg-subtle',\\n        'active:bg-warning-bg',\\n        'focus-visible:ring-warning-focus-ring',\\n        'disabled:border-warning-line disabled:bg-warning-base disabled:text-warning-line',\\n      ),\\n    },\\n    {\\n      variant: 'ghost',\\n      intent: 'warning',\\n      class: clsx(\\n        'text-warning-solid',\\n        'hover:bg-warning-bg',\\n        'active:bg-warning-bg-hover',\\n        'focus-visible:ring-warning-focus-ring',\\n        'disabled:bg-transparent disabled:text-warning-line',\\n      ),\\n    },\\n\\n    {\\n      variant: 'solid',\\n      intent: 'error',\\n      class: clsx(\\n        'bg-error-solid text-white',\\n        'hover:bg-error-solid-hover',\\n        'focus-visible:ring-error-focus-ring',\\n        'disabled:bg-error-border',\\n      ),\\n    },\\n    {\\n      variant: 'soft',\\n      intent: 'error',\\n      class: clsx(\\n        'bg-error-bg text-error-solid',\\n        'hover:bg-error-bg-hover',\\n        'active:bg-error-bg-active',\\n        'focus-visible:ring-error-focus-ring',\\n        'disabled:bg-error-bg-subtle disabled:text-error-line',\\n      ),\\n    },\\n    {\\n      variant: 'outline',\\n      intent: 'error',\\n      class: clsx(\\n        'border border-error-border bg-error-base text-error-solid',\\n        'hover:border-error-border-hover hover:bg-error-bg-subtle',\\n        'active:bg-error-bg',\\n        'focus-visible:ring-error-focus-ring',\\n        'disabled:border-error-line disabled:bg-error-base disabled:text-error-line',\\n      ),\\n    },\\n    {\\n      variant: 'ghost',\\n      intent: 'error',\\n      class: clsx(\\n        'text-error-solid',\\n        'hover:bg-error-bg',\\n        'active:bg-error-bg-hover',\\n        'focus-visible:ring-error-focus-ring',\\n        'disabled:bg-transparent disabled:text-error-line',\\n      ),\\n    },\\n    {\\n      size: 'small',\\n      icon: true,\\n      class: 'w-8 px-0',\\n    },\\n    {\\n      size: 'medium',\\n      icon: true,\\n      class: 'w-9 px-0',\\n    },\\n    {\\n      size: 'large',\\n      icon: true,\\n      class: 'w-10 px-0',\\n    },\\n  ],\\n  defaultVariants: {\\n    variant: 'solid',\\n    intent: 'default',\\n    size: 'medium',\\n  },\\n});\\n\\ntype HTMLButtonProps = React.ComponentPropsWithoutRef<'button'>;\\ntype ButtonVariants = VariantProps<typeof buttonStyles>;\\nexport type ButtonProps = {\\n  /** Change the default rendered element for the one passed as a child, merging their props and behavior. */\\n  asChild?: boolean;\\n} & HTMLButtonProps &\\n  ButtonVariants;\\n\\n/**\\n * Button component that renders a customizable button or a component that looks like a button.\\n *\\n * @param {ButtonProps} props - The props for the Button component.\\n * @param {boolean} [asChild=false] - If true, renders the button as a child component, merging props and behavior.\\n * @param {'solid' | 'soft' | 'outline' | 'ghost'} [variant='solid'] - The visual style of the button (e.g., 'solid', 'soft', 'outline', 'ghost').\\n * @param {'default' | 'error'} [intent='default'] - The intent of the button, affecting its color scheme (e.g., 'default', 'error').\\n * @param {'small' | 'medium' | 'large'} [size='medium'] - The size of the button (e.g., 'small', 'medium', 'large').\\n * @param {boolean} [icon=false] - If true, adjusts the button size for icon-only usage.\\n *\\n * @example\\n * ```tsx\\n * // Basic usage\\n * <Button>Click Me</Button>\\n * ```\\n *\\n * @example\\n * ```tsx\\n * // Using variants and intents\\n * <Button variant='outline' intent='error'>Delete</Button>\\n * ```\\n *\\n * @example\\n * ```tsx\\n * // Icon button\\n * <Button icon>\\n *   <Icon />\\n * </Button>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-button Button Docs} for further information.\\n */\\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\\n  (\\n    { asChild = false, variant, intent, size, icon, className, ...props },\\n    ref,\\n  ) => {\\n    const Comp = asChild ? Slot : 'button';\\n\\n    return (\\n      <Comp\\n        ref={ref}\\n        className={buttonStyles({\\n          variant,\\n          intent,\\n          size,\\n          icon,\\n          class: className,\\n        })}\\n        {...props}\\n      />\\n    );\\n  },\\n);\\n\\nButton.displayName = 'Button';\\n"
}
