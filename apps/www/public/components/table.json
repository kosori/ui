{
  "name": "table",
  "type": "component:ui",
  "content": "import { forwardRef } from 'react';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst tableStyles = tv({\\n  slots: {\\n    baseWrapper: 'relative w-full overflow-auto',\\n    base: 'w-full caption-bottom text-sm',\\n    header: '[&_tr]:border-b [&_tr]:border-grey-line',\\n    body: '[&_tr:last-child]:border-0',\\n    footer: clsx(\\n      'border-t border-grey-line bg-grey-bg font-medium',\\n      '[&>tr]:last:border-b-0',\\n    ),\\n    head: clsx(\\n      'h-10 px-2 text-left align-middle font-medium text-grey-text',\\n      '[&:has([role=checkbox])]:pr-0',\\n      '[&>[role=checkbox]]:translate-y-[2px]',\\n    ),\\n    row: clsx(\\n      'border-b border-grey-line transition-colors',\\n      'hover:bg-grey-bg-subtle',\\n      'data-[state=selected]:bg-grey-bg-active',\\n    ),\\n    cell: clsx(\\n      'p-2 align-middle',\\n      '[&:has([role=checkbox])]:pr-0',\\n      '[&>[role=checkbox]]:translate-y-[0px]',\\n    ),\\n    caption: 'mt-4 text-sm text-grey-text',\\n  },\\n});\\n\\nconst { baseWrapper, base, header, body, footer, head, row, cell, caption } =\\n  tableStyles();\\n\\ntype TableRef = HTMLTableElement;\\ntype TableProps = React.HTMLAttributes<HTMLTableElement>;\\n\\n/**\\n * Table component that serves as a container for tabular data.\\n *\\n * @param {TableProps} props - The props for the Table component.\\n *\\n * @example\\n * ```tsx\\n * <Table>\\n *   <TableCaption>A list of your recent invoices.</TableCaption>\\n *   <TableHeader>\\n *     <TableRow>\\n *       <TableHead className='w-[100px]'>Invoice</TableHead>\\n *       <TableHead>Status</TableHead>\\n *       <TableHead>Method</TableHead>\\n *       <TableHead className='text-right'>Amount</TableHead>\\n *     </TableRow>\\n *   </TableHeader>\\n *   <TableBody>\\n *     <TableRow>\\n *       <TableCell className='font-medium'>INV001</TableCell>\\n *       <TableCell>Paid</TableCell>\\n *       <TableCell>Credit Card</TableCell>\\n *       <TableCell className='text-right'>$250.00</TableCell>\\n *     </TableRow>\\n *   </TableBody>\\n * </Table>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-table Table Docs} for further information.\\n */\\nexport const Table = forwardRef<TableRef, TableProps>(\\n  ({ className, ...props }, ref) => (\\n    <div className={baseWrapper()}>\\n      <table ref={ref} className={base({ className })} {...props} />\\n    </div>\\n  ),\\n);\\n\\nTable.displayName = 'Table';\\n\\n/**\\n * TableHeader component that represents the header section of the table.\\n *\\n * @param {React.HTMLAttributes<HTMLTableSectionElement>} props - The props for the TableHeader component.\\n *\\n * @example\\n * ```tsx\\n * <TableHeader>\\n *   <TableRow>\\n *     <TableHead>Header</TableHead>\\n *   </TableRow>\\n * </TableHeader>\\n * ```\\n */\\nexport const TableHeader = forwardRef<\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes<HTMLTableSectionElement>\\n>(({ className, ...props }, ref) => (\\n  <thead ref={ref} className={header({ className })} {...props} />\\n));\\n\\nTableHeader.displayName = 'TableHeader';\\n\\ntype TableBodyRef = HTMLTableSectionElement;\\ntype TableBodyProps = React.HTMLAttributes<HTMLTableSectionElement>;\\n\\n/**\\n * TableBody component that represents the body section of the table.\\n *\\n * @param {TableBodyProps} props - The props for the TableBody component.\\n *\\n * @example\\n * ```tsx\\n * <TableBody>\\n *   <TableRow>\\n *     <TableCell>Data</TableCell>\\n *   </TableRow>\\n * </TableBody>\\n * ```\\n */\\nexport const TableBody = forwardRef<TableBodyRef, TableBodyProps>(\\n  ({ className, ...props }, ref) => (\\n    <tbody ref={ref} className={body({ className })} {...props} />\\n  ),\\n);\\n\\nTableBody.displayName = 'TableBody';\\n\\ntype TableFooterRef = HTMLTableSectionElement;\\ntype TableFooterProps = React.HTMLAttributes<HTMLTableSectionElement>;\\n\\n/**\\n * TableFooter component that represents the footer section of the table.\\n *\\n * @param {TableFooterProps} props - The props for the TableFooter component.\\n *\\n * @example\\n * ```tsx\\n * <TableFooter>\\n *   <TableRow>\\n *     <TableCell>Footer Data</TableCell>\\n *   </TableRow>\\n * </TableFooter>\\n * ```\\n */\\nexport const TableFooter = forwardRef<TableFooterRef, TableFooterProps>(\\n  ({ className, ...props }, ref) => (\\n    <tfoot ref={ref} className={footer({ className })} {...props} />\\n  ),\\n);\\n\\nTableFooter.displayName = 'TableFooter';\\n\\ntype TableHeadRef = HTMLTableCellElement;\\ntype TableHeadProps = React.HTMLAttributes<HTMLTableCellElement>;\\n\\n/**\\n * TableHead component that represents a header cell in the table.\\n *\\n * @param {TableHeadProps} props - The props for the TableHead component.\\n *\\n * @example\\n * ```tsx\\n * <TableHead>Header</TableHead>\\n * ```\\n */\\nexport const TableHead = forwardRef<TableHeadRef, TableHeadProps>(\\n  ({ className, ...props }, ref) => (\\n    <th ref={ref} className={head({ className })} {...props} />\\n  ),\\n);\\n\\nTableHead.displayName = 'TableHead';\\n\\ntype TableRowRef = HTMLTableRowElement;\\ntype TableRowProps = React.HTMLAttributes<HTMLTableRowElement>;\\n\\n/**\\n * TableRow component that represents a row in the table.\\n *\\n * @param {TableRowProps} props - The props for the TableRow component.\\n *\\n * @example\\n * ```tsx\\n * <TableRow>\\n *   <TableCell>Row Data</TableCell>\\n * </TableRow>\\n * ```\\n */\\nexport const TableRow = forwardRef<TableRowRef, TableRowProps>(\\n  ({ className, ...props }, ref) => (\\n    <tr ref={ref} className={row({ className })} {...props} />\\n  ),\\n);\\n\\nTableRow.displayName = 'TableRow';\\n\\ntype TableCellRef = HTMLTableCellElement;\\ntype TableCellProps = React.TdHTMLAttributes<HTMLTableCellElement>;\\n\\n/**\\n * TableCell component that represents a cell in the table.\\n *\\n * @param {TableCellProps} props - The props for the TableCell component.\\n *\\n * @example\\n * ```tsx\\n * <TableCell>Cell Data</TableCell>\\n * ```\\n */\\nexport const TableCell = forwardRef<TableCellRef, TableCellProps>(\\n  ({ className, ...props }, ref) => (\\n    <td ref={ref} className={cell({ className })} {...props} />\\n  ),\\n);\\n\\nTableCell.displayName = 'TableCell';\\n\\ntype TableCaptionRef = HTMLTableCaptionElement;\\ntype TableCaptionProps = React.HTMLAttributes<HTMLTableCaptionElement>;\\n\\n/**\\n * TableCaption component that provides a caption for the table.\\n *\\n * @param {TableCaptionProps} props - The props for the TableCaption component.\\n *\\n * @example\\n * ```tsx\\n * <TableCaption>Table Caption</TableCaption>\\n * ```\\n */\\nexport const TableCaption = forwardRef<TableCaptionRef, TableCaptionProps>(\\n  ({ className, ...props }, ref) => (\\n    <caption ref={ref} className={caption({ className })} {...props} />\\n  ),\\n);\\n\\nTableCaption.displayName = 'TableCaption';\\n"
}
