{
  "name": "separator",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-separator"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Root } from '@radix-ui/react-separator';\\nimport { tv } from 'tailwind-variants';\\n\\nconst separatorStyles = tv({\\n  base: 'shrink-0 bg-grey-line',\\n  variants: {\\n    orientation: {\\n      horizontal: 'h-px w-full',\\n      vertical: 'h-full w-px',\\n    },\\n  },\\n});\\n\\ntype SeparatorRef = React.ElementRef<typeof Root>;\\ntype SeparatorProps = React.ComponentPropsWithoutRef<typeof Root>;\\n\\n/**\\n * Separator component that visually divides content.\\n *\\n * @param {SeparatorProps} props - The props for the Separator component.\\n * @param {string} [orientation='horizontal'] - The orientation of the separator, either 'horizontal' or 'vertical'.\\n * @param {boolean} [decorative=true] - Indicates whether the separator is decorative.\\n *\\n * @example\\n * <Separator />\\n *\\n * @see {@link https://dub.sh/ui-separator Separator Docs} for further information.\\n */\\n\\nexport const Separator = forwardRef<SeparatorRef, SeparatorProps>(\\n  (\\n    { className, orientation = 'horizontal', decorative = true, ...props },\\n    ref,\\n  ) => (\\n    <Root\\n      ref={ref}\\n      className={separatorStyles({ className, orientation })}\\n      decorative={decorative}\\n      orientation={orientation}\\n      {...props}\\n    />\\n  ),\\n);\\n\\nSeparator.displayName = Root.displayName;\\n"
}
