{
  "name": "resizable",
  "type": "component:ui",
  "dependencies": ["react-resizable-panels"],
  "content": "import { DragHandleDots2Icon } from '@radix-ui/react-icons';\\nimport { clsx } from 'clsx/lite';\\nimport { Panel, PanelGroup, PanelResizeHandle } from 'react-resizable-panels';\\nimport { tv } from 'tailwind-variants';\\n\\nconst resizableStyles = tv({\\n  slots: {\\n    base: clsx(\\n      'flex h-full w-full',\\n      'data-[panel-group-direction=vertical]:flex-col',\\n    ),\\n    handle: clsx(\\n      'group relative flex w-px items-center justify-center bg-grey-border outline-none transition-colors duration-75',\\n      'after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2',\\n      'focus-visible:ring-4 focus-visible:ring-grey-focus-ring',\\n      'data-[resize-handle-state=hover]:bg-grey-border-hover',\\n      'data-[resize-handle-state=drag]:bg-grey-border-hover',\\n      'data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full',\\n      'data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0',\\n      '[&[data-panel-group-direction=vertical]>div]:rotate-90',\\n    ),\\n    handleIconWrapper: clsx(\\n      'z-10 flex h-4 w-3 items-center justify-center rounded-sm border border-grey-border bg-grey-bg',\\n      'group-data-[resize-handle-state=hover]:border-grey-border-hover group-data-[resize-handle-state=hover]:bg-grey-bg-hover',\\n      'group-data-[resize-handle-state=drag]:border-grey-border-hover group-data-[resize-handle-state=drag]:bg-grey-bg-active',\\n    ),\\n    handleIcon: 'size-2.5',\\n  },\\n});\\n\\nconst { base, handle, handleIconWrapper, handleIcon } = resizableStyles();\\n\\ntype ResizablePanelGroupProps = React.ComponentProps<typeof PanelGroup>;\\n\\n/**\\n * ResizablePanelGroup component that serves as a container for resizable panels.\\n *\\n * @param {ResizablePanelGroupProps} props - The props for the ResizablePanelGroup component.\\n *\\n * @example\\n * ```tsx\\n * <ResizablePanelGroup direction='horizontal'>\\n *   <ResizablePanel>One</ResizablePanel>\\n *   <ResizableHandle />\\n *   <ResizablePanel>Two</ResizablePanel>\\n * </ResizablePanelGroup>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-resizable-panel-group ResizablePanelGroup Docs} for further information.\\n */\\nexport const ResizablePanelGroup = ({\\n  className,\\n  ...props\\n}: ResizablePanelGroupProps) => (\\n  <PanelGroup className={base({ className })} {...props} />\\n);\\n\\n/**\\n * ResizablePanel component that represents an individual panel within the ResizablePanelGroup.\\n *\\n * @param {React.ComponentProps<typeof Panel>} props - The props for the ResizablePanel component.\\n *\\n * @example\\n * ```tsx\\n * <ResizablePanel>Content</ResizablePanel>\\n * ```\\n */\\nexport const ResizablePanel = Panel;\\n\\ntype ResizableHandleProps = React.ComponentProps<typeof PanelResizeHandle> & {\\n  withHandle?: boolean;\\n};\\n\\n/**\\n * ResizableHandle component that allows for resizing of panels within the ResizablePanelGroup.\\n *\\n * @param {ResizableHandleProps} props - The props for the ResizableHandle component.\\n * @param {boolean} [withHandle] - Indicates if the handle should be displayed.\\n *\\n * @example\\n * ```tsx\\n * <ResizableHandle withHandle />\\n * ```\\n */\\nexport const ResizableHandle = ({\\n  withHandle,\\n  className,\\n  ...props\\n}: ResizableHandleProps) => (\\n  <PanelResizeHandle className={handle({ className })} {...props}>\\n    {withHandle && (\\n      <div className={handleIconWrapper()}>\\n        <DragHandleDots2Icon className={handleIcon()} />\\n      </div>\\n    )}\\n  </PanelResizeHandle>\\n);\\n"
}
