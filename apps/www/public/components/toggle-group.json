{
  "name": "toggle-group",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-toggle-group"],
  "content": "'use client';\\n\\nimport type { VariantProps } from 'tailwind-variants';\\nimport { createContext, forwardRef, useContext } from 'react';\\nimport { Item, Root } from '@radix-ui/react-toggle-group';\\nimport { tv } from 'tailwind-variants';\\n\\nimport type { ToggleVariants } from '@kosori/ui/toggle';\\nimport { toggleStyles } from '@kosori/ui/toggle';\\n\\nconst toggleGroupStyles = tv({\\n  slots: {\\n    base: 'flex items-center justify-center gap-1',\\n  },\\n});\\n\\nconst { base } = toggleGroupStyles();\\n\\ntype ToggleGroupRef = React.ElementRef<typeof Root>;\\ntype ToggleGroupProps = React.ComponentPropsWithoutRef<typeof Root> &\\n  ToggleVariants;\\n\\n/**\\n * ToggleGroup component that serves as a container for toggle items.\\n *\\n * @param {ToggleGroupProps} props - The props for the ToggleGroup component.\\n * @param {'ghost' | 'outline'} [variant='solid'] - The visual style of the toggle group (e.g. 'ghost', 'outline').\\n * @param {'small' | 'medium' | 'large'} [size='medium'] - The size of the toggle group (e.g. 'small', 'medium', 'large').\\n *\\n * @example\\n * <ToggleGroup type='single'>\\n *   <ToggleGroupItem value='a'>A</ToggleGroupItem>\\n *   <ToggleGroupItem value='b'>B</ToggleGroupItem>\\n *   <ToggleGroupItem value='c'>C</ToggleGroupItem>\\n * </ToggleGroup>\\n *\\n * @see {@link https://dub.sh/ui-toggle-group ToggleGroup Docs} for further information.\\n */\\nexport const ToggleGroup = forwardRef<ToggleGroupRef, ToggleGroupProps>(\\n  ({ className, variant, size, children, ...props }, ref) => (\\n    <Root ref={ref} className={base({ className })} {...props}>\\n      <ToggleGroupContext.Provider value={{ variant, size }}>\\n        {children}\\n      </ToggleGroupContext.Provider>\\n    </Root>\\n  ),\\n);\\n\\nToggleGroup.displayName = Root.displayName;\\n\\n/**\\n * ToggleGroupContext component that provides context for the toggle group items.\\n *\\n * @param {VariantProps<typeof toggleStyles>} props - The props for the ToggleGroupContext.\\n *\\n * @example\\n * const context = useContext(ToggleGroupContext);\\n */\\nexport const ToggleGroupContext = createContext<\\n  VariantProps<typeof toggleStyles>\\n>({\\n  size: 'medium',\\n  variant: 'ghost',\\n  icon: false,\\n});\\n\\ntype ToggleGroupItemRef = React.ElementRef<typeof Item>;\\ntype ToggleGroupItemProps = React.ComponentPropsWithRef<typeof Item> &\\n  ToggleVariants;\\n\\n/**\\n * ToggleGroupItem component that represents an individual toggle item within the group.\\n *\\n * @param {ToggleGroupItemProps} props - The props for the ToggleGroupItem component.\\n *\\n * @example\\n * <ToggleGroupItem value='a'>A</ToggleGroupItem>\\n */\\nexport const ToggleGroupItem = forwardRef<\\n  ToggleGroupItemRef,\\n  ToggleGroupItemProps\\n>(({ className, children, variant, size, icon, ...props }, ref) => {\\n  const context = useContext(ToggleGroupContext);\\n\\n  return (\\n    <Item\\n      ref={ref}\\n      className={toggleStyles({\\n        variant: context.variant ?? variant,\\n        size: context.size ?? size,\\n        icon: context.icon ?? icon,\\n        class: className,\\n      })}\\n      {...props}\\n    >\\n      {children}\\n    </Item>\\n  );\\n});\\n\\nToggleGroupItem.displayName = Item.displayName;\\n"
}
