{
  "name": "file-tree",
  "type": "component:ui",
  "dependencies": ["lucide-react"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { clsx } from 'clsx/lite';\\nimport { FileIcon, FolderIcon, FolderOpenIcon } from 'lucide-react';\\nimport { tv } from 'tailwind-variants';\\n\\nimport {\\n  Collapsible,\\n  CollapsibleContent,\\n  CollapsibleTrigger,\\n} from '@kosori/ui/collapsible';\\n\\nconst fileTreeStyles = tv({\\n  slots: {\\n    fileTree: 'rounded-lg border bg-grey-bg-subtle p-2',\\n    folder: 'w-full',\\n    folderName: clsx(\\n      'group inline-flex h-8 w-full items-center gap-2 rounded-lg px-2 outline-none',\\n      'hover:bg-grey-bg-hover',\\n      'focus-visible:ring-4 focus-visible:ring-grey-focus-ring',\\n      'disabled:cursor-not-allowed disabled:text-grey-text',\\n      'disabled:hover:bg-grey-bg',\\n    ),\\n    folderFiles: clsx(\\n      'overflow-hidden',\\n      'data-[state=closed]:animate-collapsible-up',\\n      'data-[state=open]:animate-collapsible-down',\\n    ),\\n    file: clsx(\\n      'inline-flex h-8 w-full select-none items-center gap-2 rounded-lg px-2 text-sm',\\n      'hover:bg-grey-bg-hover',\\n      'group-data-[disabled]:cursor-not-allowed group-data-[disabled]:text-grey-text',\\n      'group-data-[disabled]:hover:bg-grey-bg',\\n    ),\\n  },\\n});\\n\\nconst { fileTree, folder, folderName, folderFiles, file } = fileTreeStyles();\\n\\ntype FileTreeRef = HTMLDivElement;\\ntype FileTreeProps = React.ComponentPropsWithoutRef<'div'>;\\n\\n/**\\n * FileTree component that represents a hierarchical structure of files and folders.\\n *\\n * @param {FileTreeProps} props - Additional props to pass to the file tree container.\\n *\\n * @example\\n * ```tsx\\n * <FileTree>\\n *   <Folder>\\n *     <FolderName>Documents</FolderName>\\n *     <FolderFiles>\\n *       <File>Resume.pdf</File>\\n *       <File>CoverLetter.docx</File>\\n *     </FolderFiles>\\n *   </Folder>\\n *   <Folder>\\n *     <FolderName>Images</FolderName>\\n *     <FolderFiles>\\n *       <File>Vacation.jpg</File>\\n *       <File>Profile.png</File>\\n *     </FolderFiles>\\n *   </Folder>\\n * </FileTree>\\n * ```\\n */\\nexport const FileTree = forwardRef<FileTreeRef, FileTreeProps>(\\n  ({ className, ...props }, ref) => (\\n    <div ref={ref} className={fileTree({ className })} {...props} />\\n  ),\\n);\\n\\nFileTree.displayName = 'FileTree';\\n\\ntype FolderRef = React.ElementRef<typeof Collapsible>;\\ntype FolderProps = React.ComponentPropsWithoutRef<typeof Collapsible>;\\n\\n/**\\n * Folder component that represents a collapsible folder in the file tree.\\n *\\n * @param {FolderProps} props - Additional props to pass to the folder component.\\n *\\n * @example\\n * ```tsx\\n * <Folder>\\n *   <FolderName>My Folder</FolderName>\\n *   <FolderFiles>\\n *     <File>File1.txt</File>\\n *     <File>File2.txt</File>\\n *   </FolderFiles>\\n * </Folder>\\n * ```\\n */\\nexport const Folder = forwardRef<FolderRef, FolderProps>(\\n  ({ className, ...props }, ref) => (\\n    <Collapsible ref={ref} className={folder({ className })} {...props} />\\n  ),\\n);\\n\\nFolder.displayName = 'Folder';\\n\\ntype FolderNameRef = React.ElementRef<typeof CollapsibleTrigger>;\\ntype FolderNameProps = React.ComponentPropsWithoutRef<\\n  typeof CollapsibleTrigger\\n>;\\n\\n/**\\n * FolderName component that acts as the clickable header for a Folder.\\n *\\n * @param {FolderNameProps} props - Additional props to pass to the folder name.\\n *\\n * @example\\n * ```tsx\\n * <FolderName>My Folder</FolderName>\\n * ```\\n */\\nexport const FolderName = forwardRef<FolderNameRef, FolderNameProps>(\\n  ({ className, children, ...props }, ref) => (\\n    <CollapsibleTrigger\\n      ref={ref}\\n      className={folderName({ className })}\\n      {...props}\\n    >\\n      <FolderIcon\\n        className={clsx(\\n          'inline-block size-4',\\n          'group-data-[state=open]:hidden',\\n        )}\\n      />\\n      <FolderOpenIcon\\n        className={clsx(\\n          'inline-block size-4',\\n          'group-data-[state=closed]:hidden',\\n        )}\\n      />\\n      {children}\\n    </CollapsibleTrigger>\\n  ),\\n);\\n\\nFolderName.displayName = 'FolderName';\\n\\ntype FolderFilesRef = React.ElementRef<typeof CollapsibleContent>;\\ntype FolderFilesProps = React.ComponentPropsWithoutRef<\\n  typeof CollapsibleContent\\n>;\\n\\n/**\\n * FolderFiles component that displays the contents of a Folder.\\n *\\n * @param {FolderFilesProps} props - Additional props to pass to the folder files container.\\n *\\n * @example\\n * ```tsx\\n * <FolderFiles>\\n *   <File>File1.txt</File>\\n *   <File>File2.txt</File>\\n * </FolderFiles>\\n * ```\\n */\\nexport const FolderFiles = forwardRef<FolderFilesRef, FolderFilesProps>(\\n  ({ className, children, ...props }, ref) => (\\n    <CollapsibleContent\\n      ref={ref}\\n      className={folderFiles({ className })}\\n      {...props}\\n    >\\n      <div className='ms-2 flex flex-col border-l ps-2'>{children}</div>\\n    </CollapsibleContent>\\n  ),\\n);\\n\\nFolderFiles.displayName = 'FolderFiles';\\n\\ntype FileRef = HTMLDivElement;\\ntype FileProps = React.ComponentPropsWithoutRef<'div'> & {\\n  /**\\n   * Optional icon to display next to the file name.\\n   */\\n  icon?: React.ReactNode;\\n};\\n\\n/**\\n * File component that represents a single file in the file tree.\\n *\\n * @param {FileProps} props - Additional props to pass to the file component.\\n * @param {React.ReactNode} [icon=<FileIcon />] - Optional icon to display next to the file name.\\n *\\n * @example\\n * ```tsx\\n * <File>MyFile.txt</File>\\n * ```\\n */\\nexport const File = forwardRef<FileRef, FileProps>(\\n  (\\n    { className, icon = <FileIcon className='size-4' />, children, ...props },\\n    ref,\\n  ) => (\\n    <div ref={ref} className={file({ className })} {...props}>\\n      {icon}\\n      {children}\\n    </div>\\n  ),\\n);\\n\\nFile.displayName = 'File';\\n"
}
