{
  "name": "hover-card",
  "type": "component:ui",
  "dependencies": ["@radix-ui/react-hover-card"],
  "content": "'use client';\\n\\nimport { forwardRef } from 'react';\\nimport { Content, Portal, Root, Trigger } from '@radix-ui/react-hover-card';\\nimport { clsx } from 'clsx/lite';\\nimport { tv } from 'tailwind-variants';\\n\\nconst hoverCardStyles = tv({\\n  slots: {\\n    content: clsx(\\n      'z-50 rounded-lg border border-grey-line bg-grey-base p-4 shadow-md outline-none',\\n      'data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95',\\n      'data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95',\\n      'data-[side=bottom]:slide-in-from-top-2',\\n      'data-[side=left]:slide-in-from-right-2',\\n      'data-[side=right]:slide-in-from-left-2',\\n      'data-[side=top]:slide-in-from-bottom-2',\\n    ),\\n  },\\n});\\n\\nconst { content } = hoverCardStyles();\\n\\n/**\\n * HoverCard component that serves as a container for the hover card functionality.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Root>} props - The props for the HoverCard component.\\n *\\n * @example\\n * ```tsx\\n * <HoverCard>\\n *   <HoverCardTrigger>Hover</HoverCardTrigger>\\n *   <HoverCardContent>\\n *     The React Framework.\\n *   </HoverCardContent>\\n * </HoverCard>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-hover-card HoverCard Docs} for further information.\\n */\\nexport const HoverCard = Root;\\n\\n/**\\n * HoverCardTrigger component that triggers the hover card when hovered over.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Trigger>} props - The props for the HoverCardTrigger component.\\n *\\n * @example\\n * ```tsx\\n * <HoverCardTrigger>Hover</HoverCardTrigger>\\n * ```\\n */\\nexport const HoverCardTrigger = Trigger;\\n\\n/**\\n * HoverCardPortal component that renders the hover card content in a portal.\\n *\\n * @param {React.ComponentPropsWithoutRef<typeof Portal>} props - The props for the HoverCardPortal component.\\n *\\n * @example\\n * ```tsx\\n * <HoverCardPortal>\\n *   <HoverCardContent>\\n *     The React Framework – created and maintained by @vercel.\\n *   </HoverCardContent>\\n * </HoverCardPortal>\\n * ```\\n */\\nexport const HoverCardPortal = Portal;\\n\\ntype HoverCardContentRef = React.ElementRef<typeof Content>;\\ntype HoverCardContentProps = React.ComponentPropsWithoutRef<typeof Content>;\\n\\n/**\\n * HoverCardContent component that displays the content of the hover card.\\n *\\n * @param {HoverCardContentProps} props - The props for the HoverCardContent component.\\n * @param {'start' | 'center' | 'end'} [align='center'] - The alignment of the content.\\n * @param {number} [sideOffset=4] - The offset from the side.\\n *\\n * @example\\n * ```tsx\\n * <HoverCardContent>\\n *   The React Framework – created and maintained by @vercel.\\n * </HoverCardContent>\\n * ```\\n *\\n * @see {@link https://dub.sh/ui-hover-card-content HoverCardContent Docs} for further information.\\n */\\nexport const HoverCardContent = forwardRef<\\n  HoverCardContentRef,\\n  HoverCardContentProps\\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\\n  <Content\\n    ref={ref}\\n    align={align}\\n    className={content({ className })}\\n    sideOffset={sideOffset}\\n    {...props}\\n  />\\n));\\n\\nHoverCardContent.displayName = Content.displayName;\\n"
}
